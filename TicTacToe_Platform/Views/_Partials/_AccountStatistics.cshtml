@using TicTacToe_Platform.Models.Games
@model TicTacToe_Platform.Views.Pages.AccountGamesModel

@{
    var playerScore = 0;
    var wonGamesCount = Model.UserPlayedGames.Count(x => Model.User.Id.Equals(x.Value.WinnerId, StringComparison.Ordinal));
    var drawGamesCount = Model.UserPlayedGames.Count(x => x.Value.GameStatus == GameStatus.Draw);
    playerScore = wonGamesCount * 2 + drawGamesCount;
}

<div class="account_statistics_wrapper">
    <h2 class="logged_in_form_header">Statistics:</h2>
    <p>Your score: @playerScore</p>
    <p>Games played: @Model.UserPlayedGames.Count</p>
    <p>Won: @wonGamesCount</p>
    <p>Draws: @drawGamesCount</p>
    <p>Lost: @Model.UserPlayedGames.Count(x => !Model.User.Id.Equals(x.Value.WinnerId, StringComparison.OrdinalIgnoreCase) && x.Value.GameStatus is not (GameStatus.Draw or GameStatus.PlayerDisconnected))</p>
    <p>Disconnected: @Model.UserPlayedGames.Count(x => !Model.User.Id.Equals(x.Value.WinnerId, StringComparison.OrdinalIgnoreCase) && x.Value.GameStatus is GameStatus.PlayerDisconnected)</p>
</div>
